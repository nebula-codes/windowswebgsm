@page "/dashboard"
@using System.Threading
@using windowswebgsm.Data
@using windowswebgsm.Data.Models
@using System.Diagnostics



<h4  style="padding-top:1em;">SYSTEM METRICS</h4>
<MudGrid>
    <MudItem xs="4" md="4">
            <MudCard >
                <MudCardContent Style="padding:2em;">
                    <h1 style="display:inline;">CPU</h1><small  style="float:right;">@cpu_name</small><br />
                    <small>@cpu_usage%</small>
                     <MudProgressLinear Style="height:1em;" Color="Color.Info" Value="@cpu_usage" Min="0" Max="100" />
                </MudCardContent>
            </MudCard>
    </MudItem>
    <MudItem xs="4" md="4">
            <MudCard >
                <MudCardContent Style="padding:2em;">
                    <h1 style="display:inline;">Memory</h1><small  style="float:right;">Unknown</small><br />
                    <small style="float:left">@ram_usage_percent%</small><small style="float:right;">@used_ram/@total_ram</small><br/>
                     <MudProgressLinear Style="height:1em;" Color="Color.Primary" Value="@ram_usage_percent" Min="0" Max="100" />
                </MudCardContent>
            </MudCard>
    </MudItem>

    <MudItem xs="4" md="4">
            <MudCard >
                <MudCardContent Style="padding:2em;">
                    <h1 style="display:inline;">Disk</h1><small style="float:right;">NTFS</small><br />
                    <small style="float:left">70%</small><small style="float:right;">170.50/465.13GB</small><br/>
                     <MudProgressLinear Style="height:1em;" Color="Color.Tertiary" Value="70" Min="0" Max="100" />
                </MudCardContent>
            </MudCard>
    </MudItem>


    </MudGrid>

    <h4  style="padding-top:1em;">GAME SERVERS</h4>
    <MudGrid>
    <MudItem xs="4" md="4">
            <MudCard >
                <MudCardContent Style="padding:2em;">
                    <h1 style="display:inline;">Servers</h1><small style="float:right;">Installed Server Count</small><br />
                    <small style="float:left">70%</small><small style="float:right;">1/@instance.MAX_SERVER</small><br/>
                     <MudProgressLinear Style="height:1em;" Color="Color.Error" Value="70" Min="0" Max="100" />
                </MudCardContent>
            </MudCard>
    </MudItem>

    <MudItem xs="4" md="4">
            <MudCard >
                <MudCardContent Style="padding:2em;">
                    <h1 style="display:inline;">Online</h1><small style="float:right;">Started Server Count</small><br />
                    <small style="float:left">70%</small><small style="float:right;">1/2</small><br/>
                     <MudProgressLinear Style="height:1em;" Color="Color.Tertiary" Value="50" Min="0" Max="100" />
                </MudCardContent>
            </MudCard>
    </MudItem>

    <MudItem xs="4" md="4">
            <MudCard >
                <MudCardContent Style="padding:2em;">
                    <h1 style="display:inline;">Active Players</h1><h1 style="float:right;">0</h1><br />
                    <small></small><br/>
                    <MudProgressLinear Style="height:1em;" Color="Color.Secondary" Value="100" Min="0" Max="100" />
                </MudCardContent>
            </MudCard>
    </MudItem>
</MudGrid>


<MudGrid>
    <MudItem  xs="12" md="12">

    </MudItem>
        
</MudGrid>


@code {
    private WWGSM instance = new WWGSM();
    private int server_count;

    private double cpu_usage;
    private string cpu_name;
    private double ram_usage_percent;
    private double available_ram;
    private double total_ram;
    private double used_ram;


    protected override void OnInitialized()
    {
        
        StartLoop();
    }

    void StartLoop()
    {
        var timer = new Timer(new TimerCallback(_ =>
        {
            
            cpu_usage = Math.Round(DiagnosticHelpers.SystemCPU, 2);
            ram_usage_percent = Math.Round(DiagnosticHelpers.SystemRAMPerc, 2);
            available_ram = Math.Round(DiagnosticHelpers.SystemAvailableRAM / (1024*1024), 2);
            total_ram = Math.Round(DiagnosticHelpers.SystemMaxRAM, 2);
            used_ram = Math.Round(total_ram - available_ram, 2);
            cpu_name = DiagnosticHelpers.SystemCPUName;
                InvokeAsync(() =>
                    {

                        StateHasChanged();
                    });

        }), null, 500, 500);
    }





}